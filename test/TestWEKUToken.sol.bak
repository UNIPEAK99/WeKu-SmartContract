/*
pragma solidity ^0.4.2;

import "truffle/Assert.sol";
import "truffle/DeployedAddresses.sol";
import "../contracts/WEKUToken.sol";

contract TestWEKUToken {

  uint initSupply = 400 * 10 ** 6;
  string tokenSymbol = "WEKU";
  string tokenName = "WEKU Token";
  address founderAddress = 0xf2a34ed99647399076b29f8bfe78f1d541adc0f3; //accounts[1];
  address ownerAddress = 0x6f003229ec072c5d017bd28e834f59ad914aacb0;
  WEKUToken token;

  function beforeAll() public {
    token = new WEKUToken(initSupply, tokenName, tokenSymbol, founderAddress);
  }

  function testOwnerBalance() public {
    //WE meta = WEKUToken(DeployedAddresses.WEKUToken());   
    uint expected = 32 * 10 ** 26;

    Assert.equal(token.balanceOf(ownerAddress), expected, "Owner should have 32 * 10 ** 26 WEKUToken initially");
  }

  function testFounderBalance() public {
    uint expected = 8 * 10 * 25;

    Assert.equal(token.balanceOf(founderAddress), expected, "Founder should have 8 * 10 * 25 WEKUToken initially");
  }

}*/

